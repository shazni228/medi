import React, { useState } from 'react';
import { useForm } from 'react-hook-form';
import { Mail, Phone, MapPin, Clock, Send, MessageCircle } from 'lucide-react';
export function Contact() {
    const [isSubmitted, setIsSubmitted] = useState(false);
    const { register, handleSubmit, reset, formState: { errors, isSubmitting }, } = useForm();
    const onSubmit = async (data) => {
        // Simulate form submission
        await new Promise(resolve => setTimeout(resolve, 1000));
        console.log('Contact form submitted:', data);
        setIsSubmitted(true);
        reset();
        // Reset success message after 5 seconds
        setTimeout(() => setIsSubmitted(false), 5000);
    };
    return (React.createElement("div", { className: "min-h-screen bg-gray-50 py-12" },
        React.createElement("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" },
            React.createElement("div", { className: "text-center mb-16" },
                React.createElement("h1", { className: "text-4xl font-bold text-gray-900 mb-6" }, "Contact Us"),
                React.createElement("p", { className: "text-xl text-gray-600 max-w-3xl mx-auto" }, "Have questions about medical content, want to contribute, or need support? We'd love to hear from you. Our team is here to help.")),
            React.createElement("div", { className: "grid lg:grid-cols-2 gap-12" },
                React.createElement("div", null,
                    React.createElement("div", { className: "bg-white rounded-xl shadow-lg p-8 mb-8" },
                        React.createElement("h2", { className: "text-2xl font-bold text-gray-900 mb-6" }, "Get in Touch"),
                        React.createElement("div", { className: "space-y-6" },
                            React.createElement("div", { className: "flex items-start space-x-4" },
                                React.createElement("div", { className: "bg-blue-100 rounded-lg p-3 flex-shrink-0" },
                                    React.createElement(Mail, { className: "h-6 w-6 text-blue-600" })),
                                React.createElement("div", null,
                                    React.createElement("h3", { className: "text-lg font-semibold text-gray-900 mb-1" }, "Email Us"),
                                    React.createElement("p", { className: "text-gray-600 mb-2" }, "Send us an email and we'll respond within 24 hours"),
                                    React.createElement("a", { href: "mailto:contact@mediblog.com", className: "text-blue-600 hover:text-blue-800" }, "contact@mediblog.com"))),
                            React.createElement("div", { className: "flex items-start space-x-4" },
                                React.createElement("div", { className: "bg-green-100 rounded-lg p-3 flex-shrink-0" },
                                    React.createElement(Phone, { className: "h-6 w-6 text-green-600" })),
                                React.createElement("div", null,
                                    React.createElement("h3", { className: "text-lg font-semibold text-gray-900 mb-1" }, "Call Us"),
                                    React.createElement("p", { className: "text-gray-600 mb-2" }, "Speak directly with our support team"),
                                    React.createElement("a", { href: "tel:+1-555-MEDIBLOG", className: "text-blue-600 hover:text-blue-800" }, "+1 (555) MEDI-BLOG"))),
                            React.createElement("div", { className: "flex items-start space-x-4" },
                                React.createElement("div", { className: "bg-purple-100 rounded-lg p-3 flex-shrink-0" },
                                    React.createElement(MapPin, { className: "h-6 w-6 text-purple-600" })),
                                React.createElement("div", null,
                                    React.createElement("h3", { className: "text-lg font-semibold text-gray-900 mb-1" }, "Visit Us"),
                                    React.createElement("p", { className: "text-gray-600" },
                                        "123 Medical Center Drive",
                                        React.createElement("br", null),
                                        "Healthcare District",
                                        React.createElement("br", null),
                                        "New York, NY 10001"))),
                            React.createElement("div", { className: "flex items-start space-x-4" },
                                React.createElement("div", { className: "bg-yellow-100 rounded-lg p-3 flex-shrink-0" },
                                    React.createElement(Clock, { className: "h-6 w-6 text-yellow-600" })),
                                React.createElement("div", null,
                                    React.createElement("h3", { className: "text-lg font-semibold text-gray-900 mb-1" }, "Office Hours"),
                                    React.createElement("p", { className: "text-gray-600" },
                                        "Monday - Friday: 9:00 AM - 6:00 PM EST",
                                        React.createElement("br", null),
                                        "Saturday: 10:00 AM - 4:00 PM EST",
                                        React.createElement("br", null),
                                        "Sunday: Closed"))))),
                    React.createElement("div", { className: "bg-white rounded-xl shadow-lg p-8" },
                        React.createElement("h2", { className: "text-2xl font-bold text-gray-900 mb-6" }, "Frequently Asked Questions"),
                        React.createElement("div", { className: "space-y-4" },
                            React.createElement("div", null,
                                React.createElement("h3", { className: "text-lg font-semibold text-gray-900 mb-2" }, "How can I contribute content?"),
                                React.createElement("p", { className: "text-gray-600" }, "Medical professionals can sign up for an account and request writer access. All content goes through our peer review process.")),
                            React.createElement("div", null,
                                React.createElement("h3", { className: "text-lg font-semibold text-gray-900 mb-2" }, "Is the medical information reliable?"),
                                React.createElement("p", { className: "text-gray-600" }, "Yes, all content is written by licensed healthcare professionals and reviewed by our editorial board before publication.")),
                            React.createElement("div", null,
                                React.createElement("h3", { className: "text-lg font-semibold text-gray-900 mb-2" }, "Can I request specific topics?"),
                                React.createElement("p", { className: "text-gray-600" }, "Absolutely! Send us your topic suggestions and we'll consider them for future articles based on community interest and medical relevance."))))),
                React.createElement("div", { className: "bg-white rounded-xl shadow-lg p-8" },
                    React.createElement("div", { className: "flex items-center mb-6" },
                        React.createElement(MessageCircle, { className: "h-8 w-8 text-blue-600 mr-3" }),
                        React.createElement("h2", { className: "text-2xl font-bold text-gray-900" }, "Send us a Message")),
                    isSubmitted && (React.createElement("div", { className: "mb-6 p-4 bg-green-50 border border-green-200 text-green-700 rounded-lg" }, "Thank you for your message! We'll get back to you within 24 hours.")),
                    React.createElement("form", { onSubmit: handleSubmit(onSubmit), className: "space-y-6" },
                        React.createElement("div", { className: "grid md:grid-cols-2 gap-6" },
                            React.createElement("div", null,
                                React.createElement("label", { htmlFor: "name", className: "block text-sm font-medium text-gray-700 mb-2" }, "Full Name *"),
                                React.createElement("input", { type: "text", id: "name", ...register('name', { required: 'Name is required' }), className: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors", placeholder: "Dr. John Smith" }),
                                errors.name && (React.createElement("p", { className: "mt-1 text-sm text-red-600" }, errors.name.message))),
                            React.createElement("div", null,
                                React.createElement("label", { htmlFor: "email", className: "block text-sm font-medium text-gray-700 mb-2" }, "Email Address *"),
                                React.createElement("input", { type: "email", id: "email", ...register('email', {
                                        required: 'Email is required',
                                        pattern: {
                                            value: /^\S+@\S+$/i,
                                            message: 'Invalid email address'
                                        }
                                    }), className: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors", placeholder: "john@example.com" }),
                                errors.email && (React.createElement("p", { className: "mt-1 text-sm text-red-600" }, errors.email.message)))),
                        React.createElement("div", null,
                            React.createElement("label", { htmlFor: "subject", className: "block text-sm font-medium text-gray-700 mb-2" }, "Subject *"),
                            React.createElement("select", { id: "subject", ...register('subject', { required: 'Please select a subject' }), className: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors" },
                                React.createElement("option", { value: "" }, "Select a subject..."),
                                React.createElement("option", { value: "general" }, "General Inquiry"),
                                React.createElement("option", { value: "content" }, "Content Contribution"),
                                React.createElement("option", { value: "technical" }, "Technical Support"),
                                React.createElement("option", { value: "partnership" }, "Partnership Opportunity"),
                                React.createElement("option", { value: "feedback" }, "Feedback"),
                                React.createElement("option", { value: "other" }, "Other")),
                            errors.subject && (React.createElement("p", { className: "mt-1 text-sm text-red-600" }, errors.subject.message))),
                        React.createElement("div", null,
                            React.createElement("label", { htmlFor: "message", className: "block text-sm font-medium text-gray-700 mb-2" }, "Message *"),
                            React.createElement("textarea", { id: "message", rows: 6, ...register('message', { required: 'Message is required' }), className: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors", placeholder: "Please describe your inquiry in detail..." }),
                            errors.message && (React.createElement("p", { className: "mt-1 text-sm text-red-600" }, errors.message.message))),
                        React.createElement("button", { type: "submit", disabled: isSubmitting, className: "w-full flex items-center justify-center space-x-2 bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors" }, isSubmitting ? (React.createElement("div", { className: "animate-spin rounded-full h-5 w-5 border-b-2 border-white" })) : (React.createElement(React.Fragment, null,
                            React.createElement(Send, { size: 18 }),
                            React.createElement("span", null, "Send Message"))))))))));
}
